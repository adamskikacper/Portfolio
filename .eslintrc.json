{
  "extends": [
    "next/core-web-vitals",
    "next/typescript",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:jsx-a11y/strict",
    "prettier"
  ],
  "plugins": ["@typescript-eslint", "import", "jsx-a11y", "react"],
  "rules": {
    "no-unused-vars": "error",
    "@typescript-eslint/no-unused-vars": ["error"],
    "import/no-unused-modules": [1, { "unusedExports": true }],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-empty-function": "warn",
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal", "parent", "sibling", "index"],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "import/no-duplicates": "error",
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "prefer-const": "error",
    "no-var": "error",
    "eqeqeq": ["error", "always"],
    "curly": ["error", "all"],
    "no-multi-spaces": "error",
    "no-multiple-empty-lines": ["error", { "max": 2, "maxEOF": 1, "maxBOF": 0 }],
    "no-trailing-spaces": "error",

    // JSX specific rules
    "react/jsx-boolean-value": ["error", "never"],
    "react/jsx-closing-bracket-location": ["error", "line-aligned"],
    "react/jsx-closing-tag-location": "error",
    "react/jsx-curly-brace-presence": ["error", { "props": "never", "children": "never" }],
    "react/jsx-curly-spacing": ["error", { "when": "never" }],
    "react/jsx-equals-spacing": ["error", "never"],
    "react/jsx-first-prop-new-line": ["error", "multiline-multiprop"],
    "react/jsx-indent": ["error", 2],
    "react/jsx-indent-props": ["error", 2],
    "react/jsx-max-props-per-line": ["error", { "maximum": 1 }],
    "react/jsx-no-duplicate-props": "error",
    "react/jsx-pascal-case": "error",
    "react/jsx-props-no-multi-spaces": "error",
    "react/jsx-tag-spacing": [
      "error",
      {
        "closingSlash": "never",
        "beforeSelfClosing": "always",
        "afterOpening": "never",
        "beforeClosing": "never"
      }
    ],
    "react/jsx-newline": ["error", { "prevent": false, "allowMultilines": true }],
    "react/jsx-one-expression-per-line": ["error", { "allow": "single-child" }],
    "react/jsx-wrap-multilines": [
      "error",
      {
        "declaration": "parens-new-line",
        "assignment": "parens-new-line",
        "return": "parens-new-line",
        "arrow": "parens-new-line",
        "condition": "parens-new-line",
        "logical": "parens-new-line",
        "prop": "parens-new-line"
      }
    ],
    "react/jsx-sort-props": [
      "error",
      {
        "callbacksLast": true,
        "shorthandFirst": true,
        "shorthandLast": false,
        "multiline": "last",
        "ignoreCase": true,
        "noSortAlphabetically": false,
        "reservedFirst": true
      }
    ],

    // Enhanced Accessibility rules
    "jsx-a11y/alt-text": [
      "error",
      {
        "elements": ["img", "object", "area", "input[type=\"image\"]"],
        "img": ["Image"]
      }
    ],
    "jsx-a11y/anchor-has-content": ["error", { "components": ["Link"] }],
    "jsx-a11y/aria-props": "error",
    "jsx-a11y/aria-proptypes": "error",
    "jsx-a11y/aria-role": ["error", { "ignoreNonDOM": true }],
    "jsx-a11y/role-has-required-aria-props": "error",
    "jsx-a11y/role-supports-aria-props": "error",
    "jsx-a11y/img-redundant-alt": "error",
    "jsx-a11y/no-redundant-roles": "error",
    "jsx-a11y/anchor-is-valid": [
      "error",
      {
        "components": ["Link"],
        "specialLink": ["hrefLeft", "hrefRight"],
        "aspects": ["invalidHref", "preferButton"]
      }
    ],
    "jsx-a11y/click-events-have-key-events": "error",
    "jsx-a11y/no-static-element-interactions": "error",
    "jsx-a11y/no-noninteractive-element-interactions": "error",
    "jsx-a11y/interactive-supports-focus": "error",
    "jsx-a11y/no-noninteractive-tabindex": "error",
    "jsx-a11y/no-autofocus": ["error", { "ignoreNonDOM": true }],
    "jsx-a11y/no-access-key": "error",
    "jsx-a11y/media-has-caption": "error",
    "jsx-a11y/no-distracting-elements": "error",
    "jsx-a11y/no-interactive-element-to-noninteractive-role": "error",
    "jsx-a11y/no-noninteractive-element-to-interactive-role": [
      "error",
      {
        "ul": ["listbox", "menu", "menubar", "radiogroup", "tablist", "tree", "treegrid"],
        "ol": ["listbox", "menu", "menubar", "radiogroup", "tablist", "tree", "treegrid"],
        "li": ["menuitem", "option", "row", "tab", "treeitem"],
        "table": ["grid"],
        "td": ["gridcell"]
      }
    ],
    "jsx-a11y/heading-has-content": "error",
    "jsx-a11y/html-has-lang": "error",
    "jsx-a11y/lang": "error",
    "jsx-a11y/mouse-events-have-key-events": "error",
    "jsx-a11y/no-onchange": "error",
    "jsx-a11y/tabindex-no-positive": "error",
    "jsx-a11y/label-has-associated-control": [
      "error",
      {
        "labelComponents": ["CustomLabel"],
        "labelAttributes": ["label"],
        "controlComponents": ["CustomInput"],
        "assert": "both",
        "depth": 3
      }
    ],

    // Enhanced JSX/HTML spacing rules
    "react/jsx-max-props-per-line": ["error", { "maximum": 1 }],
    "react/jsx-first-prop-new-line": ["error", "multiline-multiprop"],
    "react/jsx-closing-bracket-location": ["error", "line-aligned"],
    "react/jsx-closing-tag-location": "error",
    "react/jsx-tag-spacing": [
      "error",
      {
        "closingSlash": "never",
        "beforeSelfClosing": "always",
        "afterOpening": "never",
        "beforeClosing": "never"
      }
    ],
    "react/jsx-newline": ["error", { "prevent": false, "allowMultilines": true }],
    "react/jsx-one-expression-per-line": ["error", { "allow": "single-child" }],
    "react/jsx-wrap-multilines": [
      "error",
      {
        "declaration": "parens-new-line",
        "assignment": "parens-new-line",
        "return": "parens-new-line",
        "arrow": "parens-new-line",
        "condition": "parens-new-line",
        "logical": "parens-new-line",
        "prop": "parens-new-line"
      }
    ],
    "react/jsx-indent": ["error", 2],
    "react/jsx-indent-props": ["error", 2],
    "react/jsx-sort-props": [
      "error",
      {
        "callbacksLast": true,
        "shorthandFirst": true,
        "shorthandLast": false,
        "multiline": "last",
        "ignoreCase": true,
        "noSortAlphabetically": false,
        "reservedFirst": true
      }
    ],
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "*", "next": "return" },
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
      { "blankLine": "any", "prev": ["const", "let", "var"], "next": ["const", "let", "var"] },
      { "blankLine": "always", "prev": "directive", "next": "*" },
      { "blankLine": "always", "prev": "*", "next": "function" },
      { "blankLine": "always", "prev": "multiline-block-like", "next": "*" },
      { "blankLine": "always", "prev": "*", "next": "multiline-block-like" }
    ]
  },
  "settings": {
    "import/resolver": {
      "typescript": true,
      "node": true
    },
    "react": {
      "version": "detect"
    },
    "jsx-a11y": {
      "components": {
        "Image": "img",
        "Button": "button"
      }
    }
  }
}
